apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion rootProject.compile_sdk_version

    defaultConfig {
        applicationId "ru.assisttech.assistsdk.github"
        minSdkVersion rootProject.min_sdk_version
        targetSdkVersion rootProject.target_sdk_version
        versionCode rootProject.version_code
        versionName rootProject.version_name
    }
    //
    // Signing Note (Test)
    //
    // 1. Put file gradle.properties into /home/user/.gradle directory
    // 2. Fill in gradle.properties with string:
    //        TestAssistSDK.properties=/home/user/.signing/file_name.properties
    //        (Windows: TestAssistSDK.properties=C:\\Users\\user\\.signing\\file_name.properties)
    //
    // 3. Create directory /home/user/.signing
    // 4. Put into it file called file_name.properties
    // 5. Fill in file_name.properties with string-value pairs:
    //        keystore=/path/to/keystore/file.keystore (Windows: keystore=C:\\path\\to\\keystore\\file.keystore)
    //        keystore.password=your_password
    //        keyalias=your_key_alias
    //        keypassword=your_key_password
    //
    if (project.hasProperty("TestAssistSDK.properties") &&
            new File((String) project.property("TestAssistSDK.properties")).exists()) {

        Properties props = new Properties()
        props.load(new FileInputStream(file(project.property("TestAssistSDK.properties"))))

        signingConfigs {
            release {
                storeFile file(props['keystore'])
                storePassword props['keystore.password']
                keyAlias props['keyalias']
                keyPassword props['keypassword']
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (System.getenv("TRAVIS")) {
                signingConfig null
            } else {
                signingConfig null
            }
            zipAlignEnabled true
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "mobilePayTest-${variant.name}-${variant.versionName}.apk"
        }
    }
    productFlavors {
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    namespace 'ru.assisttech.assistsdk'
}

repositories {
    flatDir {
        dirs 'libs'
    }
    jcenter()
}

dependencies {
    implementation project(':sdk')
    implementation fileTree(include: ['*.jar','*.aar'], dir: 'libs')

    implementation 'io.card:android-sdk:5.5.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    // Google Wallet
    implementation 'com.google.android.gms:play-services-auth:20.4.0'
    implementation 'com.google.android.gms:play-services-wallet:19.1.0'

    implementation 'com.github.mklimek:ssl-utils-android:1.0.1'

    implementation 'com.google.code.gson:gson:2.10.1'

    // Optional backport
    implementation 'com.github.dmstocking:support-optional:1.2'

    implementation 'com.roxiemobile.android:android-commons:0.9.1'
    implementation 'com.nimbusds:nimbus-jose-jwt:9.30.1'
    implementation 'org.bitbucket.b_c:jose4j:0.7.12'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'
}